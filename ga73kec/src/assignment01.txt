Robot Operating System provides a set of frameworks for the development of software for robots.
Certain functionalities can be realized as so called "nodes". The "heart" of ROS is the "Master"-node aka "ROSCore". In order for different nodes to communicate with each other, the master node has to run (always!). The communication works with a principle known from the newspaper: Every single message can be organized in a topic. Some nodes can subscribe to that topic, while another one publishes a message in that topic. Every node that has subscribed to the topic receives the message; it doesn't need to know where it came from! It is however very inconvenient to realize request/reply transactions in this manner. This kind of interaction can be done with Services. They are defined using .srv files.

I have set up the environment like described in the Catkin tutorial, because compilation by hand becomes very confusing as the project grows in size/complexity. The solution is to use Makefiles. These can be written either by hand or automatically with the cmake command in a higher abstraction layer (to make it platfrom independant - i.e. generate GNU Makefile, OS XCode Project, MS stuff, etc.).  
In order to create a new package, catkin offers the command "catkin_create_pkg", which automatically generates the required directories and package.xml. The package.xml file is the so called "manifest" and is necessary in the compilation/build process.
